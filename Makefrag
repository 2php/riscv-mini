src_dir   = $(base_dir)/src/main/scala/designs
gen_dir   = $(base_dir)/generated-src
log_dir   = $(base_dir)/logs
isa_dir   = $(base_dir)/riscv-tests/isa 
bmarks_dir = $(base_dir)/riscv-bmarks

SBT       = sbt
SBT_FLAGS = -Dsbt.log.noformat=true -DchiselVersion=latest.release

C_FLAGS     := --targetDir $(gen_dir) --genHarness --compile --test --minimumCompatibility 3.0
V_FLAGS     := $(C_FLAGS) --v
DEBUG_FLAGS := --vcd --vcdMem --debug 

VPATH = $(src_dir):$(gen_dir):$(log_dir)

units = ALU CSR Control Datapath Cache
v     = $(addsuffix -v,   $(units))
cpp   = $(addsuffix -cpp, $(units))

$(cpp): %-cpp:
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run $* $(C_FLAGS) $(DEBUG_FLAGS)" | tee $(log_dir)/$(notdir $@).out

$(v): %-v:
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run $* $(V_FLAGS) $(DEBUG_FLAGS)" | tee $(log_dir)/$(notdir $@).out

Core-simple-cpp: 
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run Core $(C_FLAGS) $(DEBUG_FLAGS) +simple +verbose +max-cycles=500" \
	| tee $(log_dir)/$@.out
	
Core-simple-v: 
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run Core $(V_FLAGS) $(DEBUG_FLAGS) +simple +verbose +max-cycles=500" \
	| tee $(log_dir)/$@.out

Core-isa-cpp: 
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run Core $(C_FLAGS) $(DEBUG_FLAGS) +isa=$(isa_dir) +verbose +max-cycles=3000" \
	| tee $(log_dir)/$@.out

Core-isa-v: 
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run Core $(V_FLAGS) $(DEBUG_FLAGS) +isa=$(isa_dir) +verbose +max-cycles=3000" \
	| tee $(log_dir)/$@.out

Core-bmarks-cpp: 
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run Core $(C_FLAGS) +bmarks=$(bmarks_dir) +max-cycles=500000" \
	| tee $(log_dir)/$@.out

Core-bmarks-v: 
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run Core $(V_FLAGS) +bmarks=$(bmarks_dir) +max-cycles=500000" \
	| tee $(log_dir)/$@.out

Tile-simple-cpp: 
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run Tile $(C_FLAGS) $(DEBUG_FLAGS) +simple +verbose +max-cycles=500" \
	| tee $(log_dir)/$@.out
	
Tile-simple-v: 
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run Tile $(V_FLAGS) $(DEBUG_FLAGS) +simple +verbose +max-cycles=500" \
	| tee $(log_dir)/$@.out

Tile-isa-cpp: 
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run Tile $(C_FLAGS) $(DEBUG_FLAGS) +isa=$(isa_dir) +verbose +max-cycles=3000" \
	| tee $(log_dir)/$@.out

Tile-isa-v: 
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run Tile $(V_FLAGS) $(DEBUG_FLAGS) +isa=$(isa_dir) +verbose +max-cycles=3000" \
	| tee $(log_dir)/$@.out

Tile-bmarks-cpp: 
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run Tile $(C_FLAGS) +bmarks=$(bmarks_dir) +max-cycles=500000" \
	| tee $(log_dir)/$@.out

Tile-bmarks-v: 
	mkdir -p $(log_dir)
	cd $(base_dir) ; $(SBT) $(SBT_FLAGS) "run Tile $(V_FLAGS) +bmarks=$(bmarks_dir) +max-cycles=500000" \
	| tee $(log_dir)/$@.out

